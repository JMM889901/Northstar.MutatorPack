global function TwinTacticals_Init
void function TwinTacticals_Init(){
    AddPrivateMatchModeSettingEnum("#MODE_SETTING_CATEGORY_RIFFPACK", "TwinTacticals", ["#SETTING_DISABLED", "#SETTING_ENABLED"], "0")
    #if SERVER
    AddCallback_OnPlayerRespawned(Respawn)
    #endif
}

bool function TwinTacsEnabled(){
    return GetCurrentPlaylistVarInt("TwinTacticals", 0) == 1
}


array<string> pilotAbility = [
    "mp_ability_cloak",
    "mp_ability_grapple",
    "mp_ability_heal",
    "mp_ability_holopilot",
    "mp_ability_shifter",
    "mp_weapon_grenade_sonar",
    "mp_weapon_deployable_cover"
]
    array<string> pilotNades = [
    "mp_weapon_satchel",
    "mp_weapon_grenade_electric_smoke",
    "mp_weapon_grenade_emp",
    "mp_weapon_grenade_gravity",
    "mp_weapon_frag_grenade",
    "mp_weapon_thermite_grenade"
]
#if SERVER
void function Respawn(entity player){
    if(TwinTacsEnabled()){
        string offhand = player.GetOffhandWeapons()[OFFHAND_RIGHT].GetWeaponClassName()
        if(pilotNades.find(offhand) != -1){
            player.TakeWeaponNow(offhand)
            if(pilotAbility[pilotNades.find(offhand)] == player.GetOffhandWeapons()[OFFHAND_LEFT].GetWeaponClassName())
                player.GiveOffhandWeapon(pilotAbility[pilotNades.find(offhand)+1], OFFHAND_RIGHT)
            else
                player.GiveOffhandWeapon(pilotAbility[pilotNades.find(offhand)], OFFHAND_RIGHT)
            }
    }
}
#endif
